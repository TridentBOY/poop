do local utility={services={players=cloneref(game:GetService("Players")),workspace=cloneref(game:GetService("Workspace")),userinputservice=cloneref(game:GetService("UserInputService")),runservice=cloneref(game:GetService("RunService")),httpservice=cloneref(game:GetService("HttpService")),coregui=cloneref(game:GetService("CoreGui")),lighting=cloneref(game:GetService("Lighting")),guiservice=cloneref(game:GetService("GuiService")),replicatedstorage=cloneref(game:GetService("ReplicatedStorage")),networkclient=cloneref(game:GetService("NetworkClient"))},functions={}};local camera=utility.services.workspace.CurrentCamera;local mouse=utility.services.players.LocalPlayer:GetMouse();local localplayer=utility.services.players.LocalPlayer;local default_fov=camera.FieldOfView;local os_clock=os.clock();local FPS=string.split(game.Stats.Workspace.Heartbeat:GetValueString(),".");local camera=game:GetService("Workspace").Camera;local Camera=game:GetService("Workspace").Camera;local Camera=game:GetService("Workspace").CurrentCamera;local Cam=game:GetService("Workspace").Camera;local CharcaterMiddle=game:GetService("Workspace").Ignore.LocalCharacter.Middle;local Mouse=game.Players.LocalPlayer:GetMouse();local lighting=game:GetService("Lighting");local SoundService=game:GetService("SoundService");local Decimals=2;local Clock=os.clock();local Camera=game:GetService("Workspace").Camera;local CameraPred=game:GetService("Workspace").CurrentCamera;local Mouse=game.Players.LocalPlayer:GetMouse();local CharcaterMiddle=game:GetService("Workspace").Ignore.LocalCharacter.Middle;if  not LPH_OBFUSCATED then function LPH_JIT(...) return ...;end function LPH_JIT_MAX(...) return ...;end function LPH_JIT_ULTRA(...) return ...;end function LPH_NO_VIRTUALIZE(...) return ...;end function LPH_ENCSTR(...) return ...;end function LPH_STRENC(...) return ...;end function LPH_HOOK_FIX(...) return ...;end function LPH_CRASH() return print(debug.traceback());end end do local Library=loadstring(game:HttpGet("https://raw.githubusercontent.com/TridentBOY/ui-priv/main/uinit",true))();local Tabs={Combat=Library:addTab("Combat",""),Visuals=Library:addTab("Visuals",""),Misc=Library:addTab("Misc",""),World=Library:addTab("World",""),Settings=Library:addTab("Settings","")};local HBE=Tabs.Combat:createGroup("left","Hitbox Expander");_G.patrickcute=false;_G.headx=8;_G.heady=8;_G.headz=8;local function modifyPlayerHeads() for _,v in next,game.Workspace:GetChildren() do if ((v.Name=="Model") and v:FindFirstChild("Head")) then local head=v.Head;if head then local success,_=pcall(function() head.Size=Vector3.new(_G.headx,_G.heady,_G.headz);head.Transparency=0.5;head.CanCollide=false;end);if  not success then warn("Failed to modify head for player:",v.Name);end end end end end game:GetService("RunService").RenderStepped:Connect(function() if _G.patrickcute then modifyPlayerHeads();end end);HBE:addToggle({text="Hitbox",default=false,flag="Hitbox",callback=function(state) _G.patrickcute=state;end});HBE:addSlider({text="Hitbox X",min=1,max=14,suffix="%",float=1,default=1,flag="_G.headx",callback=function(Value) _G.headx=Value;end});HBE:addSlider({text="Hitbox Y:",min=1,max=14,suffix="%",float=1,default=1,flag="_G.heady",callback=function(Value) _G.heady=Value;end});HBE:addSlider({text="Hitbox Z:",min=1,max=14,suffix="%",float=1,default=1,flag="_G.headz",callback=function(Value) _G.headz=Value;end});local field_of_viewtab=Tabs.Visuals:createGroup("right","Fov/Zoom");local default_fov=70;local slider_fov=60;local field_of_view={enabled=false,amount=default_fov,zoomed=false,zoom_amount=30};do local fov_toggle=field_of_viewtab:addToggle({text="Enabled",default=false,flag="fov_changer_toggle",callback=function(value) field_of_view.enabled=value;if field_of_view.enabled then if field_of_view.zoomed then camera.FieldOfView=field_of_view.zoom_amount;else camera.FieldOfView=field_of_view.amount;end else camera.FieldOfView=default_fov;end end});local fov_keybind=fov_toggle:addKeybind({text="Field of View:",type="toggle",key=Enum.KeyCode.F,flag="field_of_view_toggle",callback=function() if field_of_view.enabled then if field_of_view.zoomed then field_of_view.zoomed=false;camera.FieldOfView=field_of_view.amount;else field_of_view.zoomed=true;camera.FieldOfView=field_of_view.zoom_amount;end end end});field_of_viewtab:addSlider({text="field of view:",min=30,max=120,suffix="x",float=1,default=70,flag="fovamount_slider",callback=function(Value) field_of_view.ammount=Value;if field_of_view.enabled then camera.FieldOfView=field_of_view.ammount;end end});field_of_viewtab:addToggle({text="enabled",default=false,flag="zoom_toggle",callback=function(Value) field_of_view.zoom_check=Value;end}):addKeybind({text="zoom",type="Hold",key=Enum.KeyCode.Z,flag="zoomkey_toggle",callback=function(Value) if field_of_view.zoom_check then field_of_view.zoom= not field_of_view.zoom;if field_of_view.zoom then camera.FieldOfView=field_of_view.zoom_ammount;else camera.FieldOfView=default_fov;end else camera.FieldOfView=default_fov;end end});field_of_viewtab:addSlider({text="zoom:",min=1,max=70,suffix="x",float=1,default=30,flag="zoomamount_slider",callback=function(Value) field_of_view.zoom_ammount=Value;if field_of_view.zoom_check then camera.FieldOfView=field_of_view.zoom_ammount;end end});camera:GetPropertyChangedSignal("FieldOfView"):Connect(function() if (field_of_view.enabled and  not field_of_view.zoom) then if (field_of_view.ammount~=camera.FieldOfView) then camera.FieldOfView=field_of_view.ammount;end end if field_of_view.zoom then camera.FieldOfView=field_of_view.zoom_ammount;end end);end local box=true;local SleeperCheck=true;local Distance=true;local Name=true;local RenderDistance=1500;local BoxESP={};local Functions={};Functions.IsSleeping=function(self,Model) if Model then local AnimationController=Model:FindFirstChild("AnimationController");if (AnimationController and AnimationController:FindFirstChild("Animator")) then for _,v in pairs(AnimationController.Animator:GetPlayingAnimationTracks()) do if (v.Animation.AnimationId=="rbxassetid://13280887764") then return true;end end end end return false;end;Functions.CheckDistance=function(self,Player,RenderDistance) if (Player and Player:IsA("Model") and Player:FindFirstChild("HumanoidRootPart")) then local distance=(workspace.CurrentCamera.CFrame.p-Player.HumanoidRootPart.Position).magnitude;return distance<=RenderDistance ,distance;end return false,0;end;BoxESP.Create=function(Player) local Box=Drawing.new("Square");Box.Visible=box;Box.Color=Color3.fromRGB(202,82,147);Box.Filled=false;Box.Transparency=1;Box.Thickness=1;local TextLabel=Drawing.new("Text");TextLabel.Visible=Name;TextLabel.Color=Color3.fromRGB(202,82,147);TextLabel.Size=16;TextLabel.Center=true;TextLabel.Outline=true;local DistanceLabel=Drawing.new("Text");DistanceLabel.Visible=Distance;DistanceLabel.Color=Color3.fromRGB(202,82,147);DistanceLabel.Size=14;DistanceLabel.Center=true;DistanceLabel.Outline=true;local ToolTextLabel;local maxTextSize=16;local function UpdateEsp() if (Player and Player:IsA("Model") and Player:FindFirstChild("HumanoidRootPart") and Player:FindFirstChild("Head")) then local isSleeping=Functions:IsSleeping(Player);if  not isSleeping then local isWithinDistance,distance=Functions:CheckDistance(Player,RenderDistance);if isWithinDistance then local Target2dPosition,IsVisible=workspace.CurrentCamera:WorldToViewportPoint(Player.HumanoidRootPart.Position);local distanceScale=math.clamp(1 -(distance/RenderDistance) ,0.5,1);local scale_factor=(1/(Target2dPosition.Z * math.tan(math.rad(workspace.CurrentCamera.FieldOfView * 0.5 )) * 2)) * 100 ;local width,height=math.floor(34 * scale_factor ),math.floor(54 * scale_factor );Box.Visible=IsVisible;Box.Size=Vector2.new(width,height);Box.Position=Vector2.new(Target2dPosition.X-(Box.Size.X/2) ,Target2dPosition.Y-(Box.Size.Y/2) );TextLabel.Visible=IsVisible;TextLabel.Position=Vector2.new(Target2dPosition.X,(Target2dPosition.Y-(height/2)) -20 );TextLabel.Size=math.clamp(maxTextSize * distanceScale ,1,maxTextSize);TextLabel.Text=Player.Name;DistanceLabel.Visible=IsVisible;DistanceLabel.Position=Vector2.new(Target2dPosition.X,Target2dPosition.Y + (height/2) + 10 );DistanceLabel.Text=(Distance and string.format("%.1f studs",distance)) or "" ;local ReplicatedStorage=game:GetService("ReplicatedStorage");local HandModels=ReplicatedStorage:FindFirstChild("HandModels");local integredantsTable={};for _,model in pairs(HandModels:GetChildren()) do local itemName=model.Name;local items={};for _,item in pairs(model:GetChildren()) do table.insert(items,item.Name);end table.insert(integredantsTable,{itemName=itemName,items=items});end local targetWeapons={"scar","bow","crossbow","m4a1","energy rifle","guass rifle","pipe pistol","usp","pipe smg","c9","ar15","blunderbuss","pump shotgun","hmar","lever","rpg","uzi","c4","handmade","dynamite"};local function CheckForTargetWeapon(matchedItems) if matchedItems then for _,weapon in ipairs(targetWeapons) do if table.find(matchedItems,weapon) then return weapon;end end end return "Hands";end local toolName=CheckForTargetWeapon(matchedItems);if  not ToolTextLabel then ToolTextLabel=Drawing.new("Text");end ToolTextLabel.Visible=IsVisible;ToolTextLabel.Color=Color3.fromRGB(255,255,255);ToolTextLabel.Size=math.clamp(maxTextSize * distanceScale ,1,maxTextSize);ToolTextLabel.Center=false;ToolTextLabel.Outline=true;ToolTextLabel.Position=Vector2.new(Target2dPosition.X + (width/2) + 10 ,(Target2dPosition.Y-(height/2)) -20 );ToolTextLabel.Text=toolName;else Box.Visible=false;TextLabel.Visible=false;DistanceLabel.Visible=false;if ToolTextLabel then ToolTextLabel:Remove();ToolTextLabel=nil;end end else Box.Visible=false;TextLabel.Visible=false;DistanceLabel.Visible=false;if ToolTextLabel then ToolTextLabel:Remove();ToolTextLabel=nil;end end else Box.Visible=false;TextLabel.Visible=false;DistanceLabel.Visible=false;if ToolTextLabel then ToolTextLabel:Remove();ToolTextLabel=nil;end if  not Player then Box:Remove();TextLabel:Remove();DistanceLabel:Remove();end end end return {UpdateEsp=UpdateEsp,Box=Box,TextLabel=TextLabel,DistanceLabel=DistanceLabel,Player=Player};end;local Boxes={};local CachedModels={};local function EnableBoxESP() for _,Model in ipairs(workspace:GetChildren()) do if (Model:IsA("Model") and Model:FindFirstChild("HumanoidRootPart") and Model:FindFirstChild("Head") and  not CachedModels[Model]) then local Esp=BoxESP.Create(Model);table.insert(Boxes,Esp);CachedModels[Model]=true;end end end game.Workspace.DescendantAdded:Connect(function(child) if (child:IsA("Model") and child:FindFirstChild("HumanoidRootPart") and child:FindFirstChild("Head") and  not CachedModels[child]) then local Esp=BoxESP.Create(child);table.insert(Boxes,Esp);CachedModels[child]=true;end end);local PlayerUpdater=game:GetService("RunService").RenderStepped;local PlayerConnection;PlayerConnection=PlayerUpdater:Connect(function() for _,Esp in ipairs(Boxes) do Esp.UpdateEsp();end end);EnableBoxESP();local Esp1=Tabs.Visuals:createGroup("left","Esp | Visuals");Esp1:addToggle({text="Boxes",default=false,flag="box",callback=function(state) box=state;for _,Esp in ipairs(Boxes) do Esp.Box.Visible=state;end end});Esp1:addToggle({text="Names",default=false,flag="Name",callback=function(state) Name=state;for _,Esp in ipairs(Boxes) do Esp.TextLabel.Visible=state;end end});Esp1:addToggle({text="Player Distance",default=false,flag="Distance",callback=function(state) Distance=state;for _,Esp in ipairs(Boxes) do Esp.DistanceLabel.Visible=state;end end});Esp1:addToggle({text="Sleeper Check",default=false,flag="SleeperCheck",callback=function(state) SleeperCheck=state;end});Esp1:addSlider({text="Render Distance",min=1,max=1500,suffix=" studs",float=1,default=500,flag="RenderDistance",callback=function(Value) RenderDistance=Value;end});local ExploitsTab=Tabs.Combat:createGroup("right","Exploits | Etc");local RunService=game:GetService("RunService");local Workspace=game:GetService("Workspace");local function createJumpShootPart() local JSPart=Instance.new("Part",Workspace);JSPart.Name="JumpShoot";JSPart.Size=Vector3.new(4,0.2,4);JSPart.Anchored=true;JSPart.Color=Color3.fromRGB(202,82,147);local forceField=Instance.new("SpecialMesh");forceField.Parent=JSPart;forceField.MeshType=Enum.MeshType.FileMesh;forceField.MeshId="rbxassetid://20329976";return JSPart;end local function updateJumpShootPosition(JSPart) while true do local characterPosition=Workspace.Ignore.LocalCharacter.Middle.Position;JSPart.Position=characterPosition-Vector3.new(0,3.5,0) ;RunService.Heartbeat:Wait();end end local JumpShootEnabled=false;local function toggleJumpShoot(state) JumpShootEnabled=state;if JumpShootEnabled then if  not JSPart then JSPart=createJumpShootPart();spawn(function() updateJumpShootPosition(JSPart);end);end elseif JSPart then JSPart:Destroy();JSPart=nil;end end ExploitsTab:addToggle({text="Jump Shoot",default=false,flag="JumpShoot",callback=toggleJumpShoot});local Worldy=Tabs.World:createGroup("left","World | Etc");local Lighting=game:GetService("Lighting");local Leaves=false;local GlobalShadows=false;local InfiniteFog=false;local function destroyLeavesObjects() local descendants=workspace:GetDescendants();for _,obj in ipairs(descendants) do if (obj:IsA("BasePart") and ((obj.Name=="Fir3_Leaves") or (obj.Name=="Palm1_Leaves") or (obj.Name=="Birch1_Leaves") or (obj.Name=="Elm1_Leaves"))) then obj:Destroy();end end end local function onLeavesToggled(state) Leaves=state;if state then destroyLeavesObjects();end end local function onShadowsToggled(state) GlobalShadows=state;Lighting.GlobalShadows=state;end local function onFogToggled(state) InfiniteFog=state;if state then Lighting.FogStart=math.huge;else Lighting.FogStart=0;end end Worldy:addToggle({text="Remove Leafs Wont Auto Updat",default=false,flag="Leaves",callback=onLeavesToggled});Worldy:addToggle({text="No Shadows",default=false,flag="GlobalShadows",callback=onShadowsToggled});Worldy:addToggle({text="No Fog",default=false,flag="InfiniteFog",callback=onFogToggled});local RunService=game:GetService("RunService");local game=game;local localDaytime=false;local localTimeOfDay=12;game.Lighting.ClockTime=tostring(localTimeOfDay);local function updateLighting() if localDaytime then game.Lighting.ClockTime=tostring(localTimeOfDay);else game.Lighting.ClockTime="0";end end Worldy:addToggle({text="Time Of Day",default=false,flag="localDaytime",callback=function(state) localDaytime=state;updateLighting();end});Worldy:addSlider({text="TimeOfDay Slider:",min=0,max=12,suffix="%",float=1,default=1,flag="localTimeOfDay",callback=function(Value) if localDaytime then localTimeOfDay=Value;updateLighting();end end});RunService.RenderStepped:Connect(function() updateLighting();end);local Speed=Tabs.Misc:createGroup("left","Speed Hack");local workspace=game:GetService("Workspace");local UserInputService=game:GetService("UserInputService");local RunService=game:GetService("RunService");local Character=workspace.Ignore.LocalCharacter.Middle;local target=game:GetService("Workspace").Ignore.LocalCharacter;local camera=game.Workspace.CurrentCamera;local Position="Down";_G.Speedy=false;_G.Speedyk=false;local acceleration=0.5;local maxSpeed=200;local currentSpeed=25;RunService.RenderStepped:Connect(function(deltaTime) if _G.Speedy then currentSpeed=math.min(currentSpeed + (acceleration * deltaTime) ,maxSpeed);for i,v in pairs(game.Workspace.Ignore.LocalCharacter:GetChildren()) do v.Velocity=v.Velocity + (game.Workspace.CurrentCamera.CFrame.LookVector * currentSpeed) ;end else currentSpeed=25;end end);UserInputService.InputBegan:Connect(function(input,g) if ((input.KeyCode==Enum.KeyCode.U) and  not g) then if (_G.HPress==true) then _G.HPress=false;_G.Speedyk=true;elseif (_G.HPress==false) then _G.HPress=true;_G.Speedyk=false;end end end);UserInputService.InputBegan:Connect(function(input,g) if ((input.KeyCode==Enum.KeyCode.C) and _G.Speedyk and  not g) then _G.Speedy=true;end end);UserInputService.InputEnded:Connect(function(input,g) if ((input.KeyCode==Enum.KeyCode.C) and  not g) then _G.Speedy=false;end end);local hopping=false;RunService.RenderStepped:Connect(function() if ((workspace.Ignore.LocalCharacter.Middle.LinearVelocity.MaxAxesForce==Vector3.new(0,0,0)) and (workspace.Ignore.LocalCharacter.Middle.Velocity.Y<=0.2)) then if  not hopping then hopping=true;Speedyk=true;Position="Up";wait(0.15);Position="Down";Speedyk=false;wait(0.09);hopping=false;end end end);local Check={};game:GetService("RunService").Heartbeat:Connect(function() if (Speedyk==true) then Check[1]=game.Workspace.Ignore.LocalCharacter.Middle.CFrame;local SpoofThis=game.Workspace.Ignore.LocalCharacter.Middle.CFrame;if (Position=="Up") then SpoofThis=SpoofThis + Vector3.new(0,5,0) ;elseif (Position=="Down") then SpoofThis=SpoofThis;end game.Workspace.Ignore.LocalCharacter.Middle.CFrame=SpoofThis;game:GetService("RunService").RenderStepped:Wait();game.Workspace.Ignore.LocalCharacter.Middle.CFrame=Check[1];end end);Speed:addToggle({text="Speed Hack",default=false,flag="_G.Speedyk",callback=function(state) _G.Speedyk=state;end});Speed:addSlider({text="Set Speed:",min=1,max=80,suffix="%",float=1,default=25,flag="maxSpeed",callback=function(Value) maxSpeed=Value;end});Speed:addSlider({text="acceleration:",min=0.2,max=1.3,suffix="%",float=1,default=1,flag="acceleration",callback=function(Value) acceleration=Value;end});local Arrow=Tabs.Visuals:createGroup("right","Arrow Trails");game:GetService("ReplicatedStorage").Arrow.Trail.Lifetime=2;game:GetService("ReplicatedStorage").Arrow.Trail.Brightness=100;game:GetService("ReplicatedStorage").Arrow.Trail.Color=ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(202,82,147)),ColorSequenceKeypoint.new(1,Color3.fromRGB(202,82,147))});Arrow:addToggle({text="Arrow Trail",default=false,flag="UpdateArrowTrail",callback=function(state) end});Arrow:addToggle({text="Arm | Weapon | Color",default=false,flag="UpdateArrowTrail",callback=function(state) end});local workspace=game:GetService("Workspace");local fpsArms=workspace.Ignore.FPSArms;local material=Enum.Material.ForceField;local color=Color3.fromRGB(202,82,147);for _,part in pairs(fpsArms:GetDescendants()) do if part:IsA("BasePart") then part.Material=material;part.Color=color;end end local replicatedStorage=game:GetService("ReplicatedStorage");local handModels=replicatedStorage:WaitForChild("HandModels");local material=Enum.Material.ForceField;local color=Color3.fromRGB(202,82,147);for _,part in pairs(handModels:GetDescendants()) do if part:IsA("BasePart") then part.Material=material;part.Color=color;end end local replicatedStorage=game:GetService("ReplicatedStorage");local handModels=replicatedStorage.HandModels;local gone=false;for _,descendant in ipairs(handModels:GetDescendants()) do if descendant:IsA("RopeConstraint") then descendant.Visible=gone;end end local CustomText=Drawing.new("Text");CustomText.Visible=false;CustomText.Text="Nitrous";CustomText.Size=12;CustomText.Outline=true;CustomText.Center=true;CustomText.Font=2;CustomText.Color=Color3.new(202,82,147);CustomText.Position=Vector2.new(Camera.ViewportSize.X/2 ,Camera.ViewportSize.Y/1.89 );Worldy:addToggle({text="onscreen",default=false,flag="Onscreen Information",callback=function(state) CustomText.Visible=state;end});local fadingIn,transparency,FADE_SPEED=true,0,0.008;local function updateTransparency() CustomText.Transparency=transparency;transparency=transparency + ((fadingIn and FADE_SPEED) or  -FADE_SPEED) ;if (fadingIn and (transparency>=1)) then fadingIn=false;elseif ( not fadingIn and (transparency<=0)) then fadingIn=true;end end game:GetService("RunService").Heartbeat:Connect(updateTransparency);loadstring(game:HttpGet("https://pastebin.com/raw/3cChgtqi",true))();local gameTab=Tabs.Settings:createGroup("left","Game");do gameTab:addToggle({text="Menu Bind",default=true,flag="MenuBind_Toggle",callback=function(state) end}):addKeybind({text="Menu Bind",type="toggle",key=Enum.KeyCode.K,flag="menubindkeybind_toggle",callback=function(state) Library.keybind=state;end});gameTab:addSlider({text="fps cap:",min=60,max=999,suffix="fps",float=1,default=999,flag="fpscap_slider",callback=function(Value) setfpscap(Value);end});gameTab:addButton({text="Copy Join Code",callback=function(state) setclipboard(("game:GetService('TeleportService'):TeleportToPlaceInstance(%s, '%s')"):format(game.PlaceId,game.JobId));Library:Notify("fobro - succesfully copied join code!",5);end});gameTab:addButton({text="rejoin",callback=function(Value) game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId);library:Notify("fobro - succesfully rejoining server!",5);end});end end end
